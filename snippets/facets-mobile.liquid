{% comment %}
  Renders facets (filtering and sorting)
  Accepts:
  - results: {Object} Collection or Search object
  - enable_filtering: {Boolean} Show filtering when true
  - enable_sorting: {Boolean} Show sorting when true
  - collapse_on_larger_devices: {Boolean} Collapse filtering/sorting into menu on larger devices when true
  Usage:
  {% render 'facets', results: collection, enable_filtering: true, enable_sorting: true, collapse_on_larger_devices: false %}
{% endcomment %}
{{ 'plp-banner.js' | asset_url | script_tag }}
{%- liquid
  assign sort_by = results.sort_by | default: results.default_sort_by
  if results.url
    assign results_url = results.url
  else
    assign terms = results.terms | escape
    assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
  endif
-%}
{%- if enable_filtering -%}
  <FacetFiltersFormMobile>
    <div class="side-panel facet-drawer" id="Facet-Drawer">
    <div class="facet-drawer-close">
        {% render 'svg-icons' with 'close' %}
      </div>
      <div class="side-panel-inner">
        <div class="side-panel-content">
          <facet-filters-form class="facets">
            <form id="FacetFiltersFormMobile" class="facets__mobile_form">
              {%- if results.terms -%}
                <input type="hidden" name="q" value="{{ results.terms | escape }}">
                <input name="options[prefix]" type="hidden" value="last">
              {%- endif -%}
              {% if results.current_vendor or results.current_type %}
                <input type="hidden" name="q" value="{{ results.current_vendor }}{{ results.current_type }}">
              {% endif %}
              {%- for filter in results.filters -%}
                {%- if filter.param_name contains 'repetto.model' -%}
                  {%- continue -%}
                {%- endif -%}

                {% case filter.type %}
                  {% when 'boolean', 'list' %}
                    <div
                      class="thb-filter js-filter"
                      style="{%- if filter.label contains 'Model' -%} display:none; {%- endif -%}"
                      data-index="{{ forloop.index }}"
                      open
                    >
                      <summary class="thb-filter-title">
                        {{ filter.label | escape }}
                      </summary>
                      <div class="thb-filter-content collapsible__content">
                        {%- if filter.param_name == 'filter.v.availability' -%}
                          <div class="thb-filter-availability">
                            {%- assign value = filter.values[0] -%}
                            <input
                              type="checkbox"
                              name="{{ value.param_name }}"
                              value="{{ value.value }}"
                              class="thb-filter-switch custom-checkbox"
                              id="Filter-{{ label }}-{{ forloop.index }}"
                              {% if value.active %}
                                checked
                              {% endif %}
                              {% if value.count == 0 and value.active == false %}
                                disabled
                              {% endif %}
                            >
                            <label for="Filter-{{ label }}-{{ forloop.index }}">{{ value.label }}</label>
                          </div>
                        {%- else -%}
                          <div>
                            {%- liquid
                              assign slug = filter.label | downcase | escape

                              if slug contains 'color' or slug contains 'colour' or slug contains 'couleur'
                                if filter_color_swatches
                                  assign slug = 'color'
                                else
                                  assign slug = ''
                                endif
                              endif
                            -%}
                            <ul class="{{ filter.type | escape }}-{{ slug }}">
                              {%- liquid
                                assign custom_colors = settings.color_swatches | newline_to_br | split: '<br />'
                                assign key_array = ''
                                assign val_array = ''

                                for color in custom_colors
                                  assign key = color | split: ':' | first | rstrip
                                  assign value = color | split: ':' | last | lstrip
                                  assign key_array = key_array | append: ',' | append: key
                                  assign val_array = val_array | append: ',' | append: value
                                endfor

                                assign key_array = key_array | remove_first: ',' | strip_newlines | downcase | split: ','
                                assign val_array = val_array | remove_first: ',' | split: ','
                              -%}
                              {%- for value in filter.values -%}
                                {% if value.value != "Default Title" %}
                                  <li class="" style="" data-handle="">
                                      <input
                                        type="checkbox"
                                        name="{{ value.param_name }}"
                                        value="{{ value.value }}"
                                        id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                                        {% if value.active %}
                                          checked
                                        {% endif %}
                                        {% if value.count == 0 and value.active == false %}
                                          disabled
                                        {% endif %}
                                      >

                                    {%- liquid
                                      assign color_value = value.value | downcase | escape
                                      for custom_color in key_array
                                        if custom_color == color_value
                                          assign color_value = val_array[forloop.index0]
                                        endif
                                      endfor

                                      assign bg_value = false
                                      if color_value contains '.'
                                        assign bg_value = color_value | file_url
                                        assign color_value = 'var(--bg-body)'
                                      endif
                                    -%}
                                    <label
                                      onclick="toggleLabelClick(event)"
                                      class="
                                        label {% if value.active %}checked{% endif %} {% if value.count == 0 and value.active == false %}disabled{% endif %}
                                        >
                                      "
                                      for="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                                      class="facet-checkbox{% if value.count == 0 and value.active == false %} facet-checkbox--disabled{% endif %}"
                                      style="--bg-color: {{ color_value | downcase | escape }};{%- if bg_value != blank -%} --option-color-image: url('{{ bg_value | escape }}');{%- endif -%}"
                                      data-tooltip="{{ value.label | escape }} "
                                    >
                                      {{ value.label | escape }}
                                    </label>
                                  </li>
                                {% endif %}
                              {%- endfor -%}
                            </ul>
                          </div>
                        {%- endif -%}
                      </div>
                    </div>

                  {% when 'price_range' %}
                    <div class="thb-filter js-filter" data-index="{{ forloop.index }}" open>
                      <summary class="thb-filter-title">{{ filter.label | escape }}</summary>
                      <div class="thb-filter-content">
                        <div class="{{ filter.type | escape }} {{ filter.type | escape }}-{{ filter.label | downcase | escape }}">
                          {% liquid
                            assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND' | split: ','
                            assign uses_comma_decimals = false
                            if currencies_using_comma_decimals contains cart.currency.iso_code
                              assign uses_comma_decimals = true
                            endif

                            assign max_value = null
                            assign min_value = null
                            if uses_comma_decimals
                              if filter.max_value.value
                                assign max_value = filter.max_value.value | money_without_currency | replace: '.', ''
                              endif
                              if filter.min_value.value
                                assign min_value = filter.min_value.value | money_without_currency | replace: '.', ''
                              endif
                              assign range_max = filter.range_max | money_without_currency | replace: '.', ''
                            else
                              if filter.max_value.value
                                assign max_value = filter.max_value.value | money_without_currency | replace: ',', ''
                              endif
                              if filter.min_value.value
                                assign min_value = filter.min_value.value | money_without_currency | replace: ',', ''
                              endif
                              assign range_max = filter.range_max | money_without_currency | replace: ',', '' | divided_by: 1.00
                            endif
                          %}
                          {%- assign max_price_amount = filter.range_max | money | strip_html | escape -%}
                          <span class="price-highest">
                            {{- 'products.facets.max_price' | t: price: max_price_amount -}}
                          </span>
                          <price-slider class="price_slider_wrapper">
                            <div
                              class="price_slider"
                              data-min-value="{{ min_value }}"
                              data-min-name="filter.v.price.gte"
                              data-min="0"
                              data-max-value="{{ max_value }}"
                              data-max-name="filter.v.price.lte"
                              data-max="{{ range_max }}"
                            ></div>
                            <div class="price_slider_amount">
                              <div>
                                <span class="field-currency">{{ cart.currency.symbol }}</span>
                                <input
                                  class="field__input field__input_min"
                                  name="{{ filter.min_value.param_name }}"
                                  id="Filter-{{ filter.label | escape }}-GTE"
                                  value="{{ min_value }}"
                                  type="text"
                                  placeholder="0"
                                >
                              </div>
                              <div>
                                <span class="field-currency">{{ cart.currency.symbol }}</span>
                                <input
                                  class="field__input field__input_max"
                                  name="{{ filter.max_value.param_name }}"
                                  id="Filter-{{ filter.label | escape }}-LTE"
                                  value="{{ max_value }}"
                                  type="text"
                                  placeholder="{{ filter.range_max | money_without_currency }}"
                                >
                              </div>
                            </div>
                          </price-slider>
                        </div>
                      </div>
                    </div>
                {% endcase %}
              {%- endfor -%}
              {% comment %} {%- if enable_sorting -%}
                <div class="thb-filter-sort-count thb-filter">
                  <div class="thb-filter-sort">
                    <div class="thb-filter-title">{{ 'products.facets.sort_by_label' | t }}</div>
                    <div class="select">
                      {%- assign sort_by = results.sort_by | default: results.default_sort_by -%}
                      <select
                        name="sort_by"
                        class="facet-filters__sort select__select caption-large"
                        id="SortByMobile"
                        aria-describedby="a11y-refresh-page-message"
                      >
                        {%- for option in results.sort_options -%}
                          <option
                            value="{{ option.value | escape }}"
                            {% if option.value == sort_by %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ option.name | escape }}
                          </option>
                        {%- endfor -%}
                      </select>
                      <div class="select-arrow">{%- render 'svg-icons' with 'thb-select' -%}</div>
                    </div>
                  </div>
                </div>
              {%- endif -%} {% endcomment %}
            </form>
          </facet-filters-form>
        </div>
        <div class="side-panel-footer">
          <button
            class="button mobile-filters-apply"
            onclick="document.querySelector('.click-capture').click()"
          >
            <span>
              {{- 'products.facets.apply' | t }}
            </span>
            <span id="FacetFiltersFormMobile-productcount">
              {%- if results.products_count -%}
                ({{ results.products_count }})
              {%- endif -%}
            </span>
          </button>
          <div>
            <a class="mobile-filters-clear text-button" href="{{ results_url }}">{{ 'products.facets.clear' | t }}</a>
          </div>
        </div>
      </div>
    </div>
  </FacetFiltersFormMobile>
{%- endif -%}

{% comment %} facets.js file will be used as JS behavior.
When an user interact with this form, renderFilters will be called each time to :
Get data from a FETCH or from cache.
In anycase FacetFiltersForm.renderFilters() will be called
This method will updated the content of the PLP page AND the number of product displayed on this side panel button.
In fact, the FETCH request response is HTML code of the page, the JS is just overwriting the innerHTML. {% endcomment %}
